name: Create Hetzner server
on:
  workflow_dispatch:

jobs:
  create_server:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Create SSH key files
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "${{ secrets.ACTIONS_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          echo "${{ secrets.HETZNER_SSH_KEY }}" > id_rsa.pub
          echo "${{ secrets.ACTIONS_SSH_KEY }}" > id_rsa_github.pub

      - name: Create tfvars secrets file
        run: |
          echo "hetzner_token = \"${{ secrets.HETZNER_CLOUD_TOKEN }}\"" > secrets.auto.tfvars

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Format check
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate -no-color

      - name: Terraform Apply
        run: terraform apply -auto-approve -input=false

      - name: Save server IP address as output
        id: server_ip
        run: echo "::set-output name=server_ip::$(terraform output -raw server_ip)"
    outputs:
        server_ip: ${{ steps.server_ip.outputs.server_ip }}

  print_server_ip:
    needs: create_server
    runs-on: ubuntu-latest
    steps:
      - name: Print server IP
        run: echo ${{ needs.create_server.outputs.server_ip }}


#  sleep:
#    runs-on: ubuntu-latest
#    needs: create_server
#    steps:
#      - name: Wait for server to be ready
#        run: sleep 90

#  TODO: add ip to known hosts
# echo "${{ needs.create_server.outputs.server_ip }}" > ~/.ssh/known_hosts

# setup-server:
#   runs-on: ubuntu-latest
#   env:
#     SSH_CONNECTION: ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}